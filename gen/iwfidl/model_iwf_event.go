/*
Workflow APIs

This APIs for iwf SDKs to operate workflows

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iwfidl

import (
	"encoding/json"
)

// checks if the IwfEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IwfEvent{}

// IwfEvent struct for IwfEvent
type IwfEvent struct {
	EventType          EventType         `json:"eventType"`
	WorkflowType       string            `json:"workflowType"`
	WorkflowId         string            `json:"workflowId"`
	WorkflowRunId      string            `json:"workflowRunId"`
	StateId            *string           `json:"stateId,omitempty"`
	StateExecutionId   *string           `json:"stateExecutionId,omitempty"`
	RpcName            *string           `json:"rpcName,omitempty"`
	StartTimestampInMs *int64            `json:"startTimestampInMs,omitempty"`
	EndTimestampInMs   *int64            `json:"endTimestampInMs,omitempty"`
	Error              *IwfEventError    `json:"error,omitempty"`
	SearchAttributes   []SearchAttribute `json:"searchAttributes,omitempty"`
}

// NewIwfEvent instantiates a new IwfEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIwfEvent(eventType EventType, workflowType string, workflowId string, workflowRunId string) *IwfEvent {
	this := IwfEvent{}
	this.EventType = eventType
	this.WorkflowType = workflowType
	this.WorkflowId = workflowId
	this.WorkflowRunId = workflowRunId
	return &this
}

// NewIwfEventWithDefaults instantiates a new IwfEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIwfEventWithDefaults() *IwfEvent {
	this := IwfEvent{}
	return &this
}

// GetEventType returns the EventType field value
func (o *IwfEvent) GetEventType() EventType {
	if o == nil {
		var ret EventType
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *IwfEvent) GetEventTypeOk() (*EventType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *IwfEvent) SetEventType(v EventType) {
	o.EventType = v
}

// GetWorkflowType returns the WorkflowType field value
func (o *IwfEvent) GetWorkflowType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkflowType
}

// GetWorkflowTypeOk returns a tuple with the WorkflowType field value
// and a boolean to check if the value has been set.
func (o *IwfEvent) GetWorkflowTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkflowType, true
}

// SetWorkflowType sets field value
func (o *IwfEvent) SetWorkflowType(v string) {
	o.WorkflowType = v
}

// GetWorkflowId returns the WorkflowId field value
func (o *IwfEvent) GetWorkflowId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value
// and a boolean to check if the value has been set.
func (o *IwfEvent) GetWorkflowIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkflowId, true
}

// SetWorkflowId sets field value
func (o *IwfEvent) SetWorkflowId(v string) {
	o.WorkflowId = v
}

// GetWorkflowRunId returns the WorkflowRunId field value
func (o *IwfEvent) GetWorkflowRunId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WorkflowRunId
}

// GetWorkflowRunIdOk returns a tuple with the WorkflowRunId field value
// and a boolean to check if the value has been set.
func (o *IwfEvent) GetWorkflowRunIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkflowRunId, true
}

// SetWorkflowRunId sets field value
func (o *IwfEvent) SetWorkflowRunId(v string) {
	o.WorkflowRunId = v
}

// GetStateId returns the StateId field value if set, zero value otherwise.
func (o *IwfEvent) GetStateId() string {
	if o == nil || IsNil(o.StateId) {
		var ret string
		return ret
	}
	return *o.StateId
}

// GetStateIdOk returns a tuple with the StateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IwfEvent) GetStateIdOk() (*string, bool) {
	if o == nil || IsNil(o.StateId) {
		return nil, false
	}
	return o.StateId, true
}

// HasStateId returns a boolean if a field has been set.
func (o *IwfEvent) HasStateId() bool {
	if o != nil && !IsNil(o.StateId) {
		return true
	}

	return false
}

// SetStateId gets a reference to the given string and assigns it to the StateId field.
func (o *IwfEvent) SetStateId(v string) {
	o.StateId = &v
}

// GetStateExecutionId returns the StateExecutionId field value if set, zero value otherwise.
func (o *IwfEvent) GetStateExecutionId() string {
	if o == nil || IsNil(o.StateExecutionId) {
		var ret string
		return ret
	}
	return *o.StateExecutionId
}

// GetStateExecutionIdOk returns a tuple with the StateExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IwfEvent) GetStateExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.StateExecutionId) {
		return nil, false
	}
	return o.StateExecutionId, true
}

// HasStateExecutionId returns a boolean if a field has been set.
func (o *IwfEvent) HasStateExecutionId() bool {
	if o != nil && !IsNil(o.StateExecutionId) {
		return true
	}

	return false
}

// SetStateExecutionId gets a reference to the given string and assigns it to the StateExecutionId field.
func (o *IwfEvent) SetStateExecutionId(v string) {
	o.StateExecutionId = &v
}

// GetRpcName returns the RpcName field value if set, zero value otherwise.
func (o *IwfEvent) GetRpcName() string {
	if o == nil || IsNil(o.RpcName) {
		var ret string
		return ret
	}
	return *o.RpcName
}

// GetRpcNameOk returns a tuple with the RpcName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IwfEvent) GetRpcNameOk() (*string, bool) {
	if o == nil || IsNil(o.RpcName) {
		return nil, false
	}
	return o.RpcName, true
}

// HasRpcName returns a boolean if a field has been set.
func (o *IwfEvent) HasRpcName() bool {
	if o != nil && !IsNil(o.RpcName) {
		return true
	}

	return false
}

// SetRpcName gets a reference to the given string and assigns it to the RpcName field.
func (o *IwfEvent) SetRpcName(v string) {
	o.RpcName = &v
}

// GetStartTimestampInMs returns the StartTimestampInMs field value if set, zero value otherwise.
func (o *IwfEvent) GetStartTimestampInMs() int64 {
	if o == nil || IsNil(o.StartTimestampInMs) {
		var ret int64
		return ret
	}
	return *o.StartTimestampInMs
}

// GetStartTimestampInMsOk returns a tuple with the StartTimestampInMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IwfEvent) GetStartTimestampInMsOk() (*int64, bool) {
	if o == nil || IsNil(o.StartTimestampInMs) {
		return nil, false
	}
	return o.StartTimestampInMs, true
}

// HasStartTimestampInMs returns a boolean if a field has been set.
func (o *IwfEvent) HasStartTimestampInMs() bool {
	if o != nil && !IsNil(o.StartTimestampInMs) {
		return true
	}

	return false
}

// SetStartTimestampInMs gets a reference to the given int64 and assigns it to the StartTimestampInMs field.
func (o *IwfEvent) SetStartTimestampInMs(v int64) {
	o.StartTimestampInMs = &v
}

// GetEndTimestampInMs returns the EndTimestampInMs field value if set, zero value otherwise.
func (o *IwfEvent) GetEndTimestampInMs() int64 {
	if o == nil || IsNil(o.EndTimestampInMs) {
		var ret int64
		return ret
	}
	return *o.EndTimestampInMs
}

// GetEndTimestampInMsOk returns a tuple with the EndTimestampInMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IwfEvent) GetEndTimestampInMsOk() (*int64, bool) {
	if o == nil || IsNil(o.EndTimestampInMs) {
		return nil, false
	}
	return o.EndTimestampInMs, true
}

// HasEndTimestampInMs returns a boolean if a field has been set.
func (o *IwfEvent) HasEndTimestampInMs() bool {
	if o != nil && !IsNil(o.EndTimestampInMs) {
		return true
	}

	return false
}

// SetEndTimestampInMs gets a reference to the given int64 and assigns it to the EndTimestampInMs field.
func (o *IwfEvent) SetEndTimestampInMs(v int64) {
	o.EndTimestampInMs = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *IwfEvent) GetError() IwfEventError {
	if o == nil || IsNil(o.Error) {
		var ret IwfEventError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IwfEvent) GetErrorOk() (*IwfEventError, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *IwfEvent) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given IwfEventError and assigns it to the Error field.
func (o *IwfEvent) SetError(v IwfEventError) {
	o.Error = &v
}

// GetSearchAttributes returns the SearchAttributes field value if set, zero value otherwise.
func (o *IwfEvent) GetSearchAttributes() []SearchAttribute {
	if o == nil || IsNil(o.SearchAttributes) {
		var ret []SearchAttribute
		return ret
	}
	return o.SearchAttributes
}

// GetSearchAttributesOk returns a tuple with the SearchAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IwfEvent) GetSearchAttributesOk() ([]SearchAttribute, bool) {
	if o == nil || IsNil(o.SearchAttributes) {
		return nil, false
	}
	return o.SearchAttributes, true
}

// HasSearchAttributes returns a boolean if a field has been set.
func (o *IwfEvent) HasSearchAttributes() bool {
	if o != nil && !IsNil(o.SearchAttributes) {
		return true
	}

	return false
}

// SetSearchAttributes gets a reference to the given []SearchAttribute and assigns it to the SearchAttributes field.
func (o *IwfEvent) SetSearchAttributes(v []SearchAttribute) {
	o.SearchAttributes = v
}

func (o IwfEvent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IwfEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["eventType"] = o.EventType
	toSerialize["workflowType"] = o.WorkflowType
	toSerialize["workflowId"] = o.WorkflowId
	toSerialize["workflowRunId"] = o.WorkflowRunId
	if !IsNil(o.StateId) {
		toSerialize["stateId"] = o.StateId
	}
	if !IsNil(o.StateExecutionId) {
		toSerialize["stateExecutionId"] = o.StateExecutionId
	}
	if !IsNil(o.RpcName) {
		toSerialize["rpcName"] = o.RpcName
	}
	if !IsNil(o.StartTimestampInMs) {
		toSerialize["startTimestampInMs"] = o.StartTimestampInMs
	}
	if !IsNil(o.EndTimestampInMs) {
		toSerialize["endTimestampInMs"] = o.EndTimestampInMs
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.SearchAttributes) {
		toSerialize["searchAttributes"] = o.SearchAttributes
	}
	return toSerialize, nil
}

type NullableIwfEvent struct {
	value *IwfEvent
	isSet bool
}

func (v NullableIwfEvent) Get() *IwfEvent {
	return v.value
}

func (v *NullableIwfEvent) Set(val *IwfEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableIwfEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableIwfEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIwfEvent(val *IwfEvent) *NullableIwfEvent {
	return &NullableIwfEvent{value: val, isSet: true}
}

func (v NullableIwfEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIwfEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
